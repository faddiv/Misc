<?xml version="1.0" encoding="utf-8"?>

<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">

    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmbiguousConstructorMatch" xml:space="preserve">
    <value>Multiple constructors accepting all given argument types have been found in type '{0}'. There should only be one applicable constructor.</value>
    <comment>{0} = service type</comment>
  </data>
  <data name="CannotResolveService" xml:space="preserve">
    <value>Unable to resolve service for type '{0}' while attempting to activate '{1}'.</value>
    <comment>{0} = service which cannot be resolved, {1} = service being activated</comment>
  </data>
  <data name="NoConstructorMatch" xml:space="preserve">
    <value>A suitable constructor for type '{0}' could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor.</value>
    <comment>{0} = service type</comment>
  </data>
  <data name="NoServiceRegistered" xml:space="preserve">
    <value>No service for type '{0}' has been registered.</value>
    <comment>{0} = service type</comment>
  </data>
  <data name="ServiceCollectionReadOnly" xml:space="preserve">
    <value>The service collection cannot be modified because it is read-only.</value>
  </data>
  <data name="TryAddIndistinguishableTypeToEnumerable" xml:space="preserve">
    <value>Implementation type cannot be '{0}' because it is indistinguishable from other services registered for '{1}'.</value>
    <comment>{0} = implementation type, {1} = service type</comment>
  </data>
  <data name="MultipleCtorsMarkedWithAttribute" xml:space="preserve">
    <value>Multiple constructors were marked with {0}.</value>
    <comment>{0} = attribute used with ActivatorUtilities</comment>
  </data>
  <data name="MarkedCtorMissingArgumentTypes" xml:space="preserve">
    <value>Constructor marked with {0} does not accept all given argument types.</value>
    <comment>{0} = attribute used with ActivatorUtilities</comment>
  </data>
  <data name="CannotCreateAbstractClasses" xml:space="preserve">
    <value>Instances of abstract classes cannot be created.</value>
  </data>
  <data name="MultipleCtorsFoundWithBestLength" xml:space="preserve">
    <value>Multiple constructors for type '{0}' were found with length {1}.</value>
    <comment>{0} = instance type, {1} = best length</comment>
  </data>
  <data name="UnableToResolveService" xml:space="preserve">
    <value>Unable to resolve service for type '{0}' while attempting to activate '{1}'.</value>
    <comment>{0} = service type, {1} = required by</comment>
  </data>
  <data name="CtorNotLocated" xml:space="preserve">
    <value>A suitable constructor for type '{0}' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.</value>
    <comment>{0} = instance type</comment>
  </data>
  <data name="MultipleCtorsFound" xml:space="preserve">
    <value>Multiple constructors accepting all given argument types have been found in type '{0}'. There should only be one applicable constructor.</value>
    <comment>{0} = instance type</comment>
  </data>
  <data name="KeyedServicesNotSupported" xml:space="preserve">
    <value>This service provider doesn't support keyed services.</value>
  </data>
  <data name="NonKeyedDescriptorMisuse" xml:space="preserve">
    <value>This service descriptor is not keyed.</value>
  </data>
</root>
