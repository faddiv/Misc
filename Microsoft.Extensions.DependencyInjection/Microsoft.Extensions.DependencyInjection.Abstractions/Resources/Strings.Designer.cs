//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Extensions.DependencyInjection.Abstractions.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Extensions.DependencyInjection.Abstractions.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple constructors accepting all given argument types have been found in type &apos;{0}&apos;. There should only be one applicable constructor..
        /// </summary>
        internal static string AmbiguousConstructorMatch {
            get {
                return ResourceManager.GetString("AmbiguousConstructorMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instances of abstract classes cannot be created..
        /// </summary>
        internal static string CannotCreateAbstractClasses {
            get {
                return ResourceManager.GetString("CannotCreateAbstractClasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve service for type &apos;{0}&apos; while attempting to activate &apos;{1}&apos;..
        /// </summary>
        internal static string CannotResolveService {
            get {
                return ResourceManager.GetString("CannotResolveService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A suitable constructor for type &apos;{0}&apos; could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided..
        /// </summary>
        internal static string CtorNotLocated {
            get {
                return ResourceManager.GetString("CtorNotLocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service provider doesn&apos;t support keyed services..
        /// </summary>
        internal static string KeyedServicesNotSupported {
            get {
                return ResourceManager.GetString("KeyedServicesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor marked with {0} does not accept all given argument types..
        /// </summary>
        internal static string MarkedCtorMissingArgumentTypes {
            get {
                return ResourceManager.GetString("MarkedCtorMissingArgumentTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple constructors accepting all given argument types have been found in type &apos;{0}&apos;. There should only be one applicable constructor..
        /// </summary>
        internal static string MultipleCtorsFound {
            get {
                return ResourceManager.GetString("MultipleCtorsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple constructors for type &apos;{0}&apos; were found with length {1}..
        /// </summary>
        internal static string MultipleCtorsFoundWithBestLength {
            get {
                return ResourceManager.GetString("MultipleCtorsFoundWithBestLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple constructors were marked with {0}..
        /// </summary>
        internal static string MultipleCtorsMarkedWithAttribute {
            get {
                return ResourceManager.GetString("MultipleCtorsMarkedWithAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A suitable constructor for type &apos;{0}&apos; could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor..
        /// </summary>
        internal static string NoConstructorMatch {
            get {
                return ResourceManager.GetString("NoConstructorMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service descriptor is not keyed..
        /// </summary>
        internal static string NonKeyedDescriptorMisuse {
            get {
                return ResourceManager.GetString("NonKeyedDescriptorMisuse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service for type &apos;{0}&apos; has been registered..
        /// </summary>
        internal static string NoServiceRegistered {
            get {
                return ResourceManager.GetString("NoServiceRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service collection cannot be modified because it is read-only..
        /// </summary>
        internal static string ServiceCollectionReadOnly {
            get {
                return ResourceManager.GetString("ServiceCollectionReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implementation type cannot be &apos;{0}&apos; because it is indistinguishable from other services registered for &apos;{1}&apos;..
        /// </summary>
        internal static string TryAddIndistinguishableTypeToEnumerable {
            get {
                return ResourceManager.GetString("TryAddIndistinguishableTypeToEnumerable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve service for type &apos;{0}&apos; while attempting to activate &apos;{1}&apos;..
        /// </summary>
        internal static string UnableToResolveService {
            get {
                return ResourceManager.GetString("UnableToResolveService", resourceCulture);
            }
        }
    }
}
