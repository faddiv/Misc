// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SlowlyChangingDimensions;

#nullable disable

namespace SlowlyChangingDimensions.Migrations
{
    [DbContext(typeof(ScdDbContext1))]
    partial class ScdDbContext1ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SlowlyChangingDimensions.ScdExampleTable1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CorrelationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Data2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Data3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PreviousVersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreviousVersionId")
                        .IsUnique()
                        .HasFilter("[PreviousVersionId] IS NOT NULL");

                    b.ToTable("ScdExampleTable1");
                });

            modelBuilder.Entity("SlowlyChangingDimensions.ScdExampleTable2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CorrelationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Data2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Data3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EndTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentVersion")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ScdExampleTable2");
                });

            modelBuilder.Entity("SlowlyChangingDimensions.ScdExampleTable1", b =>
                {
                    b.HasOne("SlowlyChangingDimensions.ScdExampleTable1", "PreviousVersion")
                        .WithOne("NextVersion")
                        .HasForeignKey("SlowlyChangingDimensions.ScdExampleTable1", "PreviousVersionId");

                    b.Navigation("PreviousVersion");
                });

            modelBuilder.Entity("SlowlyChangingDimensions.ScdExampleTable1", b =>
                {
                    b.Navigation("NextVersion");
                });
#pragma warning restore 612, 618
        }
    }
}
